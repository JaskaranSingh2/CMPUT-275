#!/bin/bash

command=$(cat "$1" )


if [[ -z "$2" ]]; then
    echo "Usage: $0 <wc-set-file>" >&2 # Send this to stderr
fi

file_stems=($(cat "$2"))
# Reminder: $() runs a command and ${} captures an output
# Took some of this code I wrote from q2
for file_stem in "${file_stems[@]}"; do
    temp="$(mktemp)"
    if [[ -f "${file_stem}.in" ]]; then # Although the curly-braces aren't necessary here I just maintain them for neatness. We use -f for regular files, and -e for anything, but we just want to know the regular file effectively.
        ${command} < "${file_stem}.in" > "${temp}" # input to wc then output to a output.txt file
        # Now produce an exit code and logically test
        if diff "${temp} "${file_stem}.out" > /dev/null; then
            echo "Test ${file_stem} passed"
        else
            echo "Test ${file_stem} failed"
        fi
    else
        echo "stem: No wc-test description"
    fi
    
    # remove the file
    rm "${temp}"
done